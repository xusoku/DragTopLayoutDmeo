<?xml version="1.0" encoding="utf-8"?>
<resources>
    <!-- style for MaterialRefreshLayout  -->
    <declare-styleable name="MaterialRefreshLayout">
        <attr name="overlay" format="boolean"/>
        <!-- style for MaterialWaveView  -->
        <attr name="wave_height_type" format="enum">
            <enum name="normal" value="0"/>
            <enum name="higher" value="1"/>
        </attr>
        <attr name="wave_color" format="color"/>
        <attr name="wave_show" format="boolean"/>
        <!-- style for CircleProgressBar  -->
        <attr name="progress_colors" format="reference"/>
        <attr name="progress_stoke_width" format="dimension"/>
        <attr name="progress_backgroud_color" format="color"/>
        <attr name="progress_show_arrow" format="boolean"/>
        <attr name="progress_arrow_width" format="dimension"/>
        <attr name="progress_arrow_height" format="dimension"/>
        <attr name="progress_show_circle_backgroud" format="boolean"/>
        <attr name="progress_value" format="integer"/>
        <attr name="progress_max_value" format="integer"/>
        <attr name="progress_text_size" format="dimension"/>
        <attr name="progress_text_color" format="color"/>
        <attr name="progress_text_visibility" format="enum">
            <enum name="visible" value="0"/>
            <enum name="invisible" value="1"/>
        </attr>
        <attr name="progress_size_type" format="enum">
            <enum name="normal" value="0"></enum>
            <enum name="big" value="1"></enum>
        </attr>
        <attr name="isLoadMore" format="boolean"></attr>
    </declare-styleable>
    <!-- MaterialRefreshLayout中声明进度圆圈的样式属性  可以自定义CircleProgressBar然后传给RefreshLayout中-->
    <declare-styleable name="CircleProgressBar">
        <attr name="mlpb_inner_radius" format="dimension"/>
        <attr name="mlpb_background_color" format="color"/>
        <attr name="mlpb_progress_color" format="color"/>
        <attr name="mlpb_progress_stoke_width" format="dimension"/>
        <attr name="mlpb_show_arrow" format="boolean"/>
        <attr name="mlpb_enable_circle_background" format="boolean"/>
        <attr name="mlpb_arrow_width" format="dimension"/>
        <attr name="mlpb_arrow_height" format="dimension"/>

        <attr name="mlpb_progress" format="integer"/>
        <attr name="mlpb_max" format="integer"/>

        <attr name="mlpb_progress_text_size" format="dimension"/>
        <attr name="mlpb_progress_text_color" format="color"/>

        <!--<attr name="mlpb_progress_text_offset" format="dimension"/>-->

        <attr name="mlpb_progress_text_visibility" format="enum">
            <enum name="visible" value="0"/>
            <enum name="invisible" value="1"/>
        </attr>
    </declare-styleable>


    <!-- ProgressWheel自定义的一些属性 -->
    <declare-styleable name="ProgressWheel">
        <attr name="matProg_progressIndeterminate" format="boolean"/>
        <attr name="matProg_barColor" format="color"/>
        <attr name="matProg_rimColor" format="color"/>
        <attr name="matProg_rimWidth" format="dimension"/>
        <attr name="matProg_spinSpeed" format="float"/>
        <attr name="matProg_barSpinCycleTime" format="integer"/>
        <attr name="matProg_circleRadius" format="dimension"/>
        <attr name="matProg_fillRadius" format="boolean"/>
        <attr name="matProg_barWidth" format="dimension"/>
        <attr name="matProg_linearProgress" format="boolean"/>
    </declare-styleable>


    <!-- CircleImageView自定义的属性 -->
    <declare-styleable name="CircleImageView">
        <attr name="civ_border_width" format="dimension"/>
        <attr name="civ_border_color" format="color"/>
        <attr name="civ_border_overlay" format="boolean"/>
        <attr name="civ_fill_color" format="color"/>
    </declare-styleable>

    <!-- HorizontalListView自定义的属性 -->
    <declare-styleable name="HorizontalListView">
        <attr name="dividerWidth" format="dimension"/>
        <attr name="android:divider"/>
        <attr name="android:requiresFadingEdge"/>
        <attr name="android:fadingEdgeLength"/>
    </declare-styleable>

    <!-- CustomTypefaceTextView-->
    <declare-styleable name="CustomTypefaceTextView">
        <attr name="customTypeface" format="string"/>
    </declare-styleable>


    <declare-styleable name="DragTopLayout">

        <!--Set the collapse panel offset-->
        <attr name="dtlCollapseOffset" format="dimension"/>

        <!--Set enable drag over.The default value is true.-->
        <attr name="dtlOverDrag" format="boolean"/>

        <!--Open the top view after the drag layout is created. The default value is false.-->
        <attr name="dtlOpen" format="boolean"/>

        <!-- The id of the top view (which will be dragged) -->
        <attr name="dtlTopView" format="reference"/>

        <!-- The content view which will be dragged together with "dtlTopView" -->
        <attr name="dtlDragContentView" format="reference"/>

        <!-- True the top view can be dragged -->
        <attr name="dtlCaptureTop" format="boolean"/>
    </declare-styleable>


    <declare-styleable name="FlowLayout">
        <attr name="android:gravity"/>
    </declare-styleable>
    <declare-styleable name="FlowLayout_Layout">
        <attr name="android:layout_gravity"/>
    </declare-styleable>

    <declare-styleable name="SwipeItemLayout">
        <attr name="swipeDirection" format="enum">
            <enum name="left" value="0"/>
            <enum name="right" value="1"/>
        </attr>
        <attr name="bottomMode" format="enum">
            <enum name="pullOut" value="0"/>
            <enum name="layDown" value="1"/>
        </attr>
        <attr name="springDistance" format="dimension"/>
        <attr name="swipeAble" format="boolean"/>
    </declare-styleable>
    <declare-styleable name="CirclePageIndicator">

        <!-- Whether or not the indicators should be centered. -->
        <attr name="centered" format="boolean"/>
        <!-- Color of the filled circle that represents the current page. -->
        <attr name="fillColor" format="color"/>
        <!-- Color of the filled circles that represents pages. -->
        <attr name="pageColor" format="color"/>
        <!-- Color of the open circles. -->
        <attr name="strokeColor" format="color"/>
        <!-- Width of the stroke used to draw the circles. -->
        <!-- Radius of the circles. This is also the spacing between circles. -->
        <attr name="radius" format="dimension"/>
        <attr name="strokeWidth" format="dimension"/>
        <attr name="spacing" format="dimension"/>
        <!-- Orientation of the indicator. -->
        <attr name="android:orientation"/>

        <!-- Whether or not the selected indicator snaps to the circles. -->
        <attr name="snap" format="boolean"/>

        <!-- View background -->
        <attr name="android:background"/>
    </declare-styleable>
</resources>